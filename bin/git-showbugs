#!/bin/bash

usage() {
	print "show-bugs [-s|--status] bug_status [-w|--web] log_options"
}

status=
log_opts=
while [ "$1" != "" ]; do
    case $1 in
        -s | --status )         shift
                                status=$1
                                ;;
        -w | --web )            web=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
	-e | --errata )		errata=1
				;;
	* )			log_opts="${log_opts} ${1}"
				shift;
				;;
    esac
    shift
done

# echo  "git log --format="format:%s" --grep "^[[:digit:]]\\+:"  $log_opts | awk -F":" '{print $1 }'"
buglist() { 
# support bug slug formats
# 12345: sdfasd
# 123456 - sdfasdf
# Bug 3423423 - sdfasd
# 123124-ssdfsdf
# these log regexes are mostly just to weed out some volume,
# we still basically search for 5+ digit numbers
for bug in $(git log --format="format:%s"  \
            --grep="^[[:digit:]]-.*" \
            --grep="Bug [[:digit:]]\\+\s-\s" \
            --grep="^[[:digit:]]\\+\s-\s" \
            --grep="[[:digit:]]\\+"  \
            $log_opts \
            | grep -E -o  "[[:digit:]]{5,}")
do
	 echo -n $bug, 
done
};


buglist_raw() {
	(IFS=,;set -- $(echo "$1") ;echo $*)
}	

open_browser()
{
	xdg-open "https://bugzilla.redhat.com/buglist.cgi?bug_id=$1;bug_status=$2" ;
};


bugs=$(buglist)

if [ -z "$bugs" ] ; then
	exit
fi

if [ "$web" == "1" ] ; then
	open_browser "$bugs" "$status" > /dev/null 2>&1
elif [ "$errata" == "1" ] ; then
	echo $(buglist_raw "$bugs")	
else
	bugzilla query --bug_status "$status" -b $(buglist) 
fi
